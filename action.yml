name: 'PSE Security Proxy'
description: 'Sets up PSE Security Proxy for secure package downloads'
author: 'InvisiRisk'
branding:
  icon: 'shield'
  color: 'blue'

inputs:
  api_url:
    description: 'URL of the InvisiRisk API (required for setup, optional for cleanup)'
    required: false
  app_token:
    description: 'Authentication token for the InvisiRisk API (required for setup, optional for cleanup)'
    required: false
  portal_url:
    description: 'URL of the InvisiRisk Portal (defaults to api_url if not provided)'
    required: false
    default: ''
  github_token:
    description: 'GitHub token to be passed to the PSE container for GitHub authentication'
    required: false
    default: ${{ github.token }}
  debug:
    description: 'Enable debug mode for verbose logging'
    required: false
    default: 'false'
  test_mode:
    description: 'Enable test mode to bypass API calls and container setup for testing. Use this when you want to test the action without actually running the PSE container.'
    required: false
    default: 'false'
  cleanup:
    description: 'Set to true to run cleanup instead of setup. This should be used at the end of your workflow.'
    required: false
    default: 'false'
  scan_id:
    description: 'Scan ID from the setup step. Optional even for cleanup - if not provided, a default value will be used.'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Run Setup or Cleanup
      shell: bash
      run: |
        # Store API credentials for both setup and cleanup
        if [ "${{ inputs.cleanup }}" != "true" ]; then
          # Only store these during setup phase
          echo "PSE_API_URL=${{ inputs.api_url }}" >> $GITHUB_ENV
          echo "PSE_APP_TOKEN=${{ inputs.app_token }}" >> $GITHUB_ENV
          echo "PSE_PORTAL_URL=${{ inputs.portal_url || inputs.api_url }}" >> $GITHUB_ENV
        fi

        if [ "${{ inputs.cleanup }}" = "true" ]; then
          echo "Running PSE cleanup..."
          chmod +x ${{ github.action_path }}/cleanup.sh
          ${{ github.action_path }}/cleanup.sh
        else
          echo "Running PSE setup..."
          # First create scan in InvisiRisk Portal
          chmod +x ${{ github.action_path }}/create_scan.sh
          ${{ github.action_path }}/create_scan.sh
          
          # Run setup script
          chmod +x ${{ github.action_path }}/setup.sh
          ${{ github.action_path }}/setup.sh
        fi
      env:
        API_URL: ${{ inputs.api_url }}
        APP_TOKEN: ${{ inputs.app_token }}
        PORTAL_URL: ${{ inputs.portal_url || inputs.api_url }}
        SCAN_ID: ${{ inputs.scan_id }}
        DEBUG: ${{ inputs.debug }}
        TEST_MODE: ${{ inputs.test_mode }}
        GITHUB_TOKEN: ${{ inputs.github_token || github.token }}

